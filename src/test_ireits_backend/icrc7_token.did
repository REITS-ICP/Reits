type TokenMetadata = record {
    name: text;
    symbol: text;
    description: opt text;
    logo: opt blob;
    content_type: opt text;
    decimals: nat8;
    website: opt text;
    social_links: opt vec text;
    supply_cap: opt nat64;
    image: opt blob;
    royalties: opt nat16;
    royalty_recipient: opt principal;
    tags: opt vec text;
    created_at: nat64;
    modified_at: nat64;
};

type Token = record {
    token_id: nat64;
    owner: principal;
    metadata: TokenMetadata;
    transfer_restricted: bool;
    last_transfer: opt nat64;
};

type Collection = record {
    name: text;
    symbol: text;
    description: text;
    total_supply: nat64;
    max_supply: opt nat64;
    royalties: nat16;
    owner: principal;
    treasury: principal;
    created_at: nat64;
    logo: opt blob;
    website: opt text;
    social_links: opt vec text;
};

type TokenStats = record {
    total_transactions: nat64;
    unique_holders: nat64;
    market_cap: nat64;
    volume_24h: nat64;
    price_change_24h: float64;
};

type TransferArgs = record {
    spender_subaccount: opt blob;
    from: principal;
    to: principal;
    token_id: nat64;
    memo: opt blob;
    created_at_time: opt nat64;
};

type ApprovalArgs = record {
    from_subaccount: opt blob;
    spender: principal;
    token_id: nat64;
    expires_at: opt nat64;
    memo: opt blob;
    created_at_time: opt nat64;
};

service : {
    // Collection Management
    initialize_collection: (
        name: text,
        symbol: text,
        description: text,
        royalties: nat16,
        treasury: principal,
        max_supply: opt nat64,
        logo: opt blob,
        website: opt text,
        social_links: opt vec text
    ) -> (bool);

    // Token Queries
    name: () -> (text) query;
    symbol: () -> (text) query;
    total_supply: () -> (nat64) query;
    max_supply: () -> (opt nat64) query;
    owner_of: (token_id: nat64) -> (opt principal) query;
    balance_of: (owner: principal) -> (nat64) query;

    // Token Operations
    mint: (
        owner: principal,
        metadata: TokenMetadata,
        transfer_restricted: bool
    ) -> (opt nat64);
    transfer: (TransferArgs) -> (variant { Ok: bool; Err: text });
    approve: (ApprovalArgs) -> (variant { Ok: bool; Err: text });

    // Queries
    get_approved: (token_id: nat64) -> (opt record { principal; opt nat64 }) query;
    get_metadata: (token_id: nat64) -> (opt TokenMetadata) query;
    get_token: (token_id: nat64) -> (opt Token) query;
    get_collection_info: () -> (opt Collection) query;
    get_token_stats: (token_id: nat64) -> (opt TokenStats) query;
    get_user_tokens: (user: principal) -> (vec Token) query;
}; 